diff --git a/generator/annotator.cpp b/generator/annotator.cpp
index 984c56b..c7ea9dc 100644
--- a/generator/annotator.cpp
+++ b/generator/annotator.cpp
@@ -151,9 +151,9 @@ Annotator::Visibility Annotator::getVisibility(const clang::NamedDecl *decl)
 
     switch (decl->getLinkageInternal()) {
     default:
-    case clang::NoLinkage:
+    case clang::Linkage::None:
         return Visibility::Local;
-    case clang::ExternalLinkage:
+    case clang::Linkage::External:
         if (decl->getDeclContext()->isRecord()
             && mainFID
                 == sm.getFileID(
@@ -172,11 +172,11 @@ Annotator::Visibility Annotator::getVisibility(const clang::NamedDecl *decl)
             return Visibility::Static;
         }
         return Visibility::Global;
-    case clang::InternalLinkage:
+    case clang::Linkage::Internal:
         if (mainFID != sm.getFileID(sm.getSpellingLoc(decl->getSourceRange().getBegin())))
             return Visibility::Global;
         return Visibility::Static;
-    case clang::UniqueExternalLinkage:
+    case clang::Linkage::UniqueExternal:
         return Visibility::Static;
     }
 }
diff --git a/generator/inlayhintannotator.cpp b/generator/inlayhintannotator.cpp
index c6a754f..2c6e36a 100644
--- a/generator/inlayhintannotator.cpp
+++ b/generator/inlayhintannotator.cpp
@@ -36,7 +36,7 @@ static bool isReservedName(llvm::StringRef id)
 {
     if (id.size() < 2)
         return false;
-    return id.startswith("__");
+    return id.starts_with("__");
 }
 
 static llvm::StringRef getSimpleName(const clang::NamedDecl *d)
@@ -254,7 +254,7 @@ bool InlayHintsAnnotatorHelper::isPrecededByParamNameComment(const clang::Expr *
     if (!sourcePrefix.consume_back(paramName))
         return false;
     sourcePrefix = sourcePrefix.rtrim(ignoreChars);
-    return sourcePrefix.endswith("/*");
+    return sourcePrefix.ends_with("/*");
 }
 
 std::string InlayHintsAnnotatorHelper::getParamNameInlayHint(clang::CallExpr *e,
@@ -270,7 +270,7 @@ std::string InlayHintsAnnotatorHelper::getParamNameInlayHint(clang::CallExpr *e,
         return {};
 
     // simple setter? => ignore
-    if (f->getNumParams() == 1 && getSimpleName(f).startswith_insensitive("set"))
+    if (f->getNumParams() == 1 && getSimpleName(f).starts_with_insensitive("set"))
         return {};
 
     llvm::StringRef paramName = getSimpleName(paramDecl);
diff --git a/generator/main.cpp b/generator/main.cpp
index 3f2e1f5..513587e 100644
--- a/generator/main.cpp
+++ b/generator/main.cpp
@@ -299,7 +299,7 @@ static bool proceedCommand(std::vector<std::string> command, llvm::StringRef Dir
         previousIsDashI = false;
         if (A.empty())
             continue;
-        if (llvm::StringRef(A).startswith("-I") && A[2] != '/') {
+        if (llvm::StringRef(A).starts_with("-I") && A[2] != '/') {
             A = "-I" % Directory % "/" % llvm::StringRef(A).substr(2);
             continue;
         }
@@ -458,12 +458,12 @@ int main(int argc, const char **argv)
         // A directory was passed, process all the files in that directory
         llvm::SmallString<128> DirName;
         llvm::sys::path::native(Sources.front(), DirName);
-        while (DirName.endswith("/"))
+        while (DirName.ends_with("/"))
             DirName.pop_back();
         std::error_code EC;
         for (llvm::sys::fs::recursive_directory_iterator it(DirName.str(), EC), DirEnd;
              it != DirEnd && !EC; it.increment(EC)) {
-            if (llvm::sys::path::filename(it->path()).startswith(".")) {
+            if (llvm::sys::path::filename(it->path()).starts_with(".")) {
                 it.no_push();
                 continue;
             }
@@ -603,7 +603,7 @@ int main(int argc, const char **argv)
                       << "\n";
             auto command = compileCommandsForFile.front().CommandLine;
             std::replace(command.begin(), command.end(), fileForCommands, it);
-            if (llvm::StringRef(file).endswith(".qdoc")) {
+            if (llvm::StringRef(file).ends_with(".qdoc")) {
                 command.insert(command.begin() + 1, "-xc++");
                 // include the header for this .qdoc file
                 command.push_back("-include");
